{"version":3,"sources":["webpack://JSBridge/webpack/universalModuleDefinition","webpack://JSBridge/./index.js","webpack://JSBridge/./lib/bridge.js","webpack://JSBridge/webpack/bootstrap","webpack://JSBridge/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","isIosWebView","isWebView","window","hasOwnProperty","isAndroidWebView","navigator","userAgent","indexOf","invokeCallbacks","handleRegisterCallbacks","invokeCallbackId","hasBridge","webkit","messageHandlers","invokeHandler","e","_handleMessageFromNative","func","paramString","param","JSON","parse","_handleInvokeCallbackFromNative","callbackId","execResult","readyEvent","Event","document","dispatchEvent","invoke","params","callback","paramsString","stringify","postMessage","register","executor","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAkB,SAAID,IAEtBD,EAAe,SAAIC,IARrB,CASGK,MAAM,WACT,M,uCCRAH,EAAOD,QAAU,EAAjB,M,QCAA,IAEIK,EAFAC,EAAYC,QAAUA,OAAOC,eAAe,YAI5CC,GAAqD,IADzCF,OAAOG,UAAUC,UACAC,QAAQ,WACzCP,GAAgBI,EAGhB,IAAII,EAAkB,GAClBC,EAA0B,GAC1BC,EAAmB,EAEvB,SAASC,IACP,IACE,QAAKV,IAGDD,KACKE,OAAOU,QAAUV,OAAOU,OAAOC,iBAAmBX,OAAOU,OAAOC,gBAAgBC,iBAElFZ,OAAOY,eACd,MAAOC,GACP,OAAO,GA0EX,GAHAb,OAAOc,yBAvCP,SAAiCC,EAAMC,GACrC,IAAIC,EACJ,IACEA,EAAQC,KAAKC,MAAMH,GACnB,MAAOH,GACPI,EAAQD,EAEV,OAAOT,EAAwBQ,GAAME,IAiCvCjB,OAAOoB,gCArDP,SAAwCC,EAAYC,GAClD,GAA2C,mBAAhChB,EAAgBe,GAA4B,CACrD,IACEC,EAAaJ,KAAKC,MAAMG,GACxB,MAAOT,GACPS,EAAa,GAEfhB,EAAgBe,GAAYC,UACrBhB,EAAgBe,KA+CvBZ,IAAa,CACf,IAAIc,EAAa,IAAIC,MAAM,iBAC3BxB,OAAOyB,SAASC,cAAcH,GAGhC7B,EAAOD,QAAU,CACfkC,OArCF,SAAgBZ,EAAMa,EAAQC,GAC5B,GAAKpB,KAGAM,GAAwB,iBAATA,EAApB,CAGKa,GAA4B,iBAAXA,IACpBA,EAAS,IAEX,IAAIE,EAAeZ,KAAKa,UAAUH,GAC9BP,IAAeb,EACnBF,EAAgBe,GAAcQ,EAnDhC,SAAuBd,EAAMe,EAAcT,GACrCvB,EAEFE,OAAOU,OAAOC,gBAAgBC,cAAcoB,YAAY,CACtDL,OAAQZ,EACRe,aAAcA,EACdT,WAAYA,IAIdrB,OAAOY,cAAce,OAAOZ,EAAMe,EAAcT,GA0ClDT,CAAcG,EAAMe,EAAcT,KAyBlCY,SArBF,SAAkBlB,EAAMmB,GACjBzB,KAGAM,GAAwB,iBAATA,GAAyC,mBAAbmB,IAGhD3B,EAAwBQ,GAAQmB,OC1F9BC,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAU5C,QAG3C,IAAIC,EAASyC,EAAyBE,GAAY,CAGjD5C,QAAS,IAOV,OAHA6C,EAAoBD,GAAU3C,EAAQA,EAAOD,QAAS2C,GAG/C1C,EAAOD,QCjBR2C,CAAoB,K","file":"jsbridge.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JSBridge\"] = factory();\n\telse\n\t\troot[\"JSBridge\"] = factory();\n})(self, function() {\nreturn ","'use strict';\n\nmodule.exports = require('./lib/bridge');\n","'use strict';\n\nvar isWebView = window && window.hasOwnProperty('document');\n\nvar isIosWebView = false;\nvar userAgent = window.navigator.userAgent;\nvar isAndroidWebView = userAgent.indexOf('Android') !== -1;\nisIosWebView = !isAndroidWebView;\n\n// obj\nvar invokeCallbacks = {};\nvar handleRegisterCallbacks = {};\nvar invokeCallbackId = 0;\n\nfunction hasBridge() {\n  try {\n    if (!isWebView) {\n      return false;\n    }\n    if (isIosWebView) {\n      return window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.invokeHandler ? true : false;\n    }\n    return window.invokeHandler ? true : false;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction invokeHandler(func, paramsString, callbackId) {\n  if (isIosWebView) {\n    // iOS\n    window.webkit.messageHandlers.invokeHandler.postMessage({\n      invoke: func,\n      paramsString: paramsString,\n      callbackId: callbackId\n    });\n  } else {\n    // Android\n    window.invokeHandler.invoke(func, paramsString, callbackId);\n  }\n}\n\n// invoke callback exec from native\nfunction handleInvokeCallbackFromNative(callbackId, execResult) {\n  if (typeof invokeCallbacks[callbackId] === 'function') {\n    try {\n      execResult = JSON.parse(execResult);\n    } catch (e) {\n      execResult = {};\n    }\n    invokeCallbacks[callbackId](execResult);\n    delete invokeCallbacks[callbackId];\n  }\n}\n\n// native call h5\nfunction handleMessageFromNative(func, paramString) {\n  var param;\n  try {\n    param = JSON.parse(paramString);\n  } catch (e) {\n    param = paramString;\n  }\n  return handleRegisterCallbacks[func](param);\n}\n\n// call native func\nfunction invoke(func, params, callback) {\n  if (!hasBridge()) {\n    return;\n  }\n  if (!func || typeof func !== 'string') {\n    return;\n  }\n  if (!params || typeof params !== 'object') {\n    params = {};\n  }\n  var paramsString = JSON.stringify(params);\n  var callbackId = ++invokeCallbackId;\n  invokeCallbacks[callbackId] = callback;\n  invokeHandler(func, paramsString, callbackId);\n}\n\n// register func, wait native call\nfunction register(func, executor) {\n  if (!hasBridge()) {\n    return;\n  }\n  if (!func || typeof func !== 'string' || typeof executor !== 'function') {\n    return;\n  }\n  handleRegisterCallbacks[func] = executor;\n}\n\n// mount attr\nwindow._handleMessageFromNative = handleMessageFromNative;\nwindow._handleInvokeCallbackFromNative = handleInvokeCallbackFromNative;\n\nif (hasBridge()) {\n  var readyEvent = new Event('JSBridgeReady');\n  window.document.dispatchEvent(readyEvent);\n}\n\nmodule.exports = {\n  invoke: invoke,\n  register: register\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(10);\n"],"sourceRoot":""}