{"version":3,"sources":["webpack://JSBridge/webpack/universalModuleDefinition","webpack://JSBridge/./index.js","webpack://JSBridge/./lib/jsbridge.js","webpack://JSBridge/webpack/bootstrap","webpack://JSBridge/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","window","hasOwnProperty","isIosWebView","invokeCallbacks","invokeCallbackId","isAndroidWebView","navigator","userAgent","indexOf","readyEvent","Event","document","dispatchEvent","invoke","func","params","callback","paramsString","JSON","stringify","callbackId","webkit","messageHandlers","invokeHandler","postMessage","execResult","parse","e","_invokeHandler","_invokeCallback","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAkB,SAAID,IAEtBD,EAAe,SAAIC,IARrB,CASGK,MAAM,WACT,O,gBCVAH,EAAOD,QAAU,EAAjB,M,QCEA,GAFgBK,OAAOC,eAAe,YAEtC,CAEA,IAAIC,EAEAC,EAAkB,GAClBC,EAAmB,EAGnBC,GAAoD,GADxCL,OAAOM,UAAUC,UACAC,QAAQ,WACzCN,GAAgBG,EAEhB,IAgDII,EAAa,IAAIC,MAAM,iBAC3BV,OAAOW,SAASC,cAAcH,GAE9Bb,EAAOD,QAAU,CACfkB,OA7BW,SAAUC,EAAMC,EAAQC,GACnC,GAAKF,GAAwB,iBAATA,EAApB,CAGsB,iBAAXC,IACTA,EAAS,IAEX,IAAIE,EAAeC,KAAKC,UAAUJ,GAC9BK,IAAehB,EACnBD,EAAgBiB,GAAcJ,EAhCX,SAAUF,EAAMG,EAAcG,GACjD,GAAIlB,EAEFF,OAAOqB,OAAOC,gBAAgBC,cAAcC,YAAY,CACtDX,OAAQC,EACRG,aAAcA,EACdG,WAAYA,QAET,CAEL,IAAIK,EAAazB,OAAOuB,cAAcV,OAAOC,EAAMG,EAAcG,GACjE,QAA0B,IAAfK,GAAqE,mBAAhCtB,EAAgBiB,IAA6C,KAAfK,EAAmB,CAC/G,IACEA,EAAaP,KAAKQ,MAAMD,GACxB,MAAOE,GACPF,EAAa,GAEftB,EAAgBiB,GAAYK,UACrBtB,EAAgBiB,KAe3BQ,CAAed,EAAMG,EAAcG,KAoBnCS,gBAjB0B,SAAUT,EAAYK,GAChD,QAA0B,IAAfA,GAAqE,mBAAhCtB,EAAgBiB,IAA6C,KAAfK,EAAmB,CAC/G,IACEA,EAAaP,KAAKQ,MAAMD,GACxB,MAAOE,GACPF,EAAa,GAEftB,EAAgBiB,GAAYK,UACrBtB,EAAgBiB,SCxDvBU,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUrC,QAG3C,IAAIC,EAASkC,EAAyBE,GAAY,CAGjDrC,QAAS,IAOV,OAHAsC,EAAoBD,GAAUpC,EAAQA,EAAOD,QAASoC,GAG/CnC,EAAOD,QCjBRoC,CAAoB,I,MDFvBD","file":"jsbridge.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JSBridge\"] = factory();\n\telse\n\t\troot[\"JSBridge\"] = factory();\n})(self, function() {\nreturn ","module.exports = require('./lib/jsbridge');\r\n","var isWebView = window.hasOwnProperty('document');\r\n\r\nif (!isWebView) return;\r\n\r\nvar isIosWebView = false;\r\n\r\nvar invokeCallbacks = {};\r\nvar invokeCallbackId = 0;\r\n\r\nvar userAgent = window.navigator.userAgent;\r\nvar isAndroidWebView = userAgent.indexOf('Android') != -1;\r\nisIosWebView = !isAndroidWebView;\r\n\r\nvar _invokeHandler = function (func, paramsString, callbackId) {\r\n  if (isIosWebView) {\r\n    // iOS\r\n    window.webkit.messageHandlers.invokeHandler.postMessage({\r\n      invoke: func,\r\n      paramsString: paramsString,\r\n      callbackId: callbackId,\r\n    });\r\n  } else {\r\n    // Android\r\n    var execResult = window.invokeHandler.invoke(func, paramsString, callbackId);\r\n    if (typeof execResult !== 'undefined' && typeof invokeCallbacks[callbackId] === 'function' && execResult !== '') {\r\n      try {\r\n        execResult = JSON.parse(execResult);\r\n      } catch (e) {\r\n        execResult = {};\r\n      }\r\n      invokeCallbacks[callbackId](execResult);\r\n      delete invokeCallbacks[callbackId];\r\n    }\r\n  }\r\n}\r\n\r\nvar invoke = function (func, params, callback) {\r\n  if (!func || typeof func !== 'string') {\r\n    return;\r\n  }\r\n  if (typeof params !== 'object') {\r\n    params = {};\r\n  };\r\n  var paramsString = JSON.stringify(params);\r\n  var callbackId = ++invokeCallbackId\r\n  invokeCallbacks[callbackId] = callback;\r\n  _invokeHandler(func, paramsString, callbackId);\r\n}\r\n\r\nvar invokeCallbackHandler = function (callbackId, execResult) {\r\n  if (typeof execResult !== 'undefined' && typeof invokeCallbacks[callbackId] === 'function' && execResult !== '') {\r\n    try {\r\n      execResult = JSON.parse(execResult);\r\n    } catch (e) {\r\n      execResult = {};\r\n    }\r\n    invokeCallbacks[callbackId](execResult);\r\n    delete invokeCallbacks[callbackId];\r\n  }\r\n}\r\n\r\nvar readyEvent = new Event('JSBridgeReady');\r\nwindow.document.dispatchEvent(readyEvent);\r\n\r\nmodule.exports = {\r\n  invoke: invoke,\r\n  _invokeCallback: invokeCallbackHandler\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(10);\n"],"sourceRoot":""}