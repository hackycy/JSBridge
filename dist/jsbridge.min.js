!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.JSBridge=n():e.JSBridge=n()}(self,(function(){return e={10:(e,n,o)=>{e.exports=o(469)},469:e=>{"use strict";if(!window||!window.hasOwnProperty("document"))throw new Error("unsupport");var n,o={},t={},r=0,i=-1!==window.navigator.userAgent.indexOf("Android");n=!i,window._handleMessageFromNative=function(e,n){var o;try{o=JSON.parse(n)}catch(e){o=n}return t[e](o)},window._handleInvokeCallbackFromNative=function(e,n){if("function"==typeof o[e]){try{n=JSON.parse(n)}catch(e){n={}}o[e](n),delete o[e]}};var d=new Event("JSBridgeReady");window.document.dispatchEvent(d),e.exports={invoke:function(e,t,i){if(!(n?window.webkit&&window.webkit.messageHandlers&&window.webkit.messageHandlers.invokeHandler:window.invokeHandler))throw new Error("bridge is not mount!");if(e&&"string"==typeof e){"object"!=typeof t&&(t={});var d=JSON.stringify(t),s=++r;o[s]=i,function(e,o,t){n?window.webkit.messageHandlers.invokeHandler.postMessage({invoke:e,paramsString:o,callbackId:t}):window.invokeHandler.invoke(e,o,t)}(e,d,s)}},register:function(e,n){e&&"string"==typeof e&&"function"==typeof n&&(t[e]=n)}}}},n={},function o(t){if(n[t])return n[t].exports;var r=n[t]={exports:{}};return e[t](r,r.exports,o),r.exports}(10);var e,n}));
//# sourceMappingURL=jsbridge.min.map